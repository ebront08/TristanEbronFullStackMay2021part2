* {
  box-sizing: border-box;
}

body {
  font-family: Arial;
  margin: 0;
}

header {
  padding: 40px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What happens when we set the display property to flex? 
defines the display to be responsive to flexible changes 
*/
nav {
  display: flex;
  background-color: #d8a47f;
}

nav a {
  color: #13293d;
  padding: 14px 20px;
  text-decoration: none;
  text-align: center;
}

/* 
What is the flex-wrap property? 
The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked
*/
main {
  display: flex;
  flex-wrap: wrap;
}

aside {
  flex: 1;
  background-color: #b9c6ae;
  padding: 80px;
  text-align: center;
}


footer {
  padding: 20px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What does the justify-content property do? 
The justify-content property is a sub-property of the Flexible Box Layout module. It defines the alignment along the main axis. It helps distribute extra free space leftover when either all the flex items on a line are inflexible, or are flexible but have reached their maximum size.
*/
.products {
  flex: 4;
  background-color: #fff;
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

/* 
What is the flex property a shorthand property for?
What is it doing here? 
The flex property is a sub-property of the Flexible Box Layout module. This is the shorthand for flex-grow, flex-shrink and flex-basis. The second and third parameters (flex-shrink and flex-basis) are optional.
*/
.card {
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  padding: 10px;
  flex: 0 0 400px;
}

.card header {
  padding: 20px;
}

.card p {
  text-align: center;
}

.card img {
  width: 100%;
}

/* 
What does the flex-direction property define?
What is it doing here? 
The flex-direction CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed). Row is default, but can be changed to column style! 
*/
@media screen and (max-width: 768px) {
  main,
  nav {
    flex-direction: column;
  }
}
